/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E   &kp R &kp T       &kp Y   &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D   &kp F &kp G       &kp H   &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C   &kp V &kp B       &kp N   &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                        &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2  &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2   |  3   |  4  |  5   |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | CTRL |     | PGUP | HOME | END | PGDN |   | LFT | DWN |  UP | RGT |     |      |
// | F1   | F2  |  F3  | F4  |  F5  |  F6  |   | F7  | F8  |  F9 | F10 | F11 |  F12 |
//                     | GUI  | ADJ | SPC  |   | ENT |     | ALT |
                        bindings = <
   &kp TAB   &kp N1 &kp N2    &kp N3   &kp N4  &kp N5      &kp N6   &kp N7   &kp N8 &kp N9    &kp N0  &kp BSPC
   &bt LCTRL &trans &kp PG_UP &kp HOME &kp END &kp PG_DN   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans  &trans
   &kp F1    &kp F2 &kp F3    &kp F4   &kp F5  &kp F6      &kp F7   &kp F8   &kp F9 &kp F10   &kp F11 &kp F12
                              &kp LGUI &trans  &kp SPACE   &kp RET  &mo 3   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  | "|" |  `  |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  |  \  |  ~  |
//                    | GUI |     | SPC |   | ENT | ADJ | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp DEL
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp PIPE &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp BSLH &kp TILDE
                             &kp LGUI &mo 3    &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     | VOL_DN |    MUTE    | VOL_UP |     |      |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     | PREV   | PLAY/PAUSE | NEXT   |     |      |
// |      |     |     |     |     |     |   |     |        |            |        |     |      |
//                    |     |     |     |   |     |        |            |
                        bindings = <
   &trans     &trans       &trans       &trans       &trans       &trans            &kp C_VOL_DN &kp C_MUTE &kp C_VOL_UP &trans &trans &trans
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &kp C_PREV   &kp C_PP   &kp C_NEXT   &trans &trans &trans
   &trans     &trans       &trans       &trans       &trans       &trans            &trans       &trans     &trans       &trans &trans &trans
                                        &trans       &trans       &trans            &trans       &trans     &trans
                        >;
                };
        };
};
